from flask import Flask
from flask import render_template
from flask import request
from flask import redirect
from analyzer import analyze as la
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address
import os

app = Flask(__name__)


@app.after_request
def add_security_headers(resp):
    resp.headers['Content-Security-Policy'] = 'default-src \'self\''
    resp.headers['X-Content-Type-Options'] = 'nosniff'
    resp.headers['Access-Control-Allow-Origin'] = '*'
    resp.headers['X-Frame-Options'] = 'DENY'
    return resp


limiter = Limiter(
    app,
    key_func=get_remote_address,
    default_limits=["8 per minute"]
)


@limiter.request_filter
def ip_whitelist():
    return request.remote_addr == "54.205.119.224"


@limiter.limit("50 per minute")
@app.route("/")
def hello_world():
    return render_template('main.html')


@app.route("/analyze", methods=["GET", "POST"])
def analyze():
    if request.method == "POST":
        form = request.form
        if form["apikey"].replace(".", "").isalnum() != True or form["scanid"].isalnum() != True:
            return "Bad Request", 400

        result = la(form["apikey"], form["scanid"])
        if type(result) == str:
            return render_template('error.html', err=result)
        return render_template('result.html', eps=result[0], hosts=result[1], scanid=form["scanid"])
    return redirect("/")


if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(debug=True, host='0.0.0.0', port=port)
